package Object;

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import Model.ConnectDB;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Warrantys.java
//  @ Date : 25/03/2016
//  @ Author : 
//
//




public class Warrantys {
	private int warrantyID;
	private String productID;
	private String orderID;
	private String serialNumber;
	private Date expiredDate;
	
	public Warrantys(int warrantyID, Date expiredDate, String OrderID, String SerialNumber, String productID) {
		// TODO Auto-generated constructor stub
		this.setWarrantyID(warrantyID);
		this.setExpiredDate(expiredDate);
		this.setOrderID(OrderID);
		this.setSerialNumber(SerialNumber);
		this.setProductID(productID);;
	}

	public Warrantys getWarrantyByOrderID(String OderID) throws Exception{
		Warrantys war = null;
		ConnectDB conn = new ConnectDB();
		String sql = "select * from warrantys where orderid=?";
		try {
			PreparedStatement pst = conn.openConnect().prepareStatement(sql);
			pst.setString(1, orderID);
			ResultSet rs=pst.executeQuery();
			int warrantyID = rs.getInt("warrantyid");
			Date exp = rs.getDate("expireddate");
			String orID = rs.getString("orderid");
			String serial = rs.getString("serialnumber");
			String productID = rs.getString("productid");
			war = new Warrantys(warrantyID, exp, orID, serial, productID);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		conn.closeConnet();
		return war;
		
	}
	
	
	public boolean insertWarranty() throws Exception{
		
		ConnectDB conn = new ConnectDB();
		String sql = "insert into warrantys (expireddate, orderid, serialnumber, productid) values (?,?,?,?)";
		try {
			PreparedStatement pst = conn.openConnect().prepareStatement(sql);
			pst.setDate(1, this.getExpiredDate());
			pst.setString(2, this.getOrderID());
			
			pst.setString(3, this.getSerialNumber());
			pst.setString(4, this.getProductID());
			if(pst.executeUpdate()>0)
				return defaultValues.increaseDefaultValue("currentwarranty");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
			conn.closeConnet();
			return false;
		
		
		
	}
	
	public boolean deleteWarranty() throws Exception{
		
		ConnectDB conn = new ConnectDB();
		String sql = "delete from warrantyswhere warrantyid=?";
		try {
			PreparedStatement pst = conn.openConnect().prepareStatement(sql);
			pst.setDate(1, this.getExpiredDate());
			
			return pst.executeUpdate()>0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
			conn.closeConnet();
			return false;
		
		
		
	}
	

public boolean updateWarranty(Warrantys warr) throws Exception{
		
		ConnectDB conn = new ConnectDB();
		String sql = "update warrantys set warrantyid=?, expireddate=?, orderid=?, serialnumber=?, productid=? where warrantyid=?";
		try {
			PreparedStatement pst = conn.openConnect().prepareStatement(sql);
			pst.setInt(1, warr.getWarrantyID());
			pst.setDate(2, warr.getExpiredDate());
			pst.setString(3, warr.getOrderID());
			
			pst.setString(4, warr.getSerialNumber());
			pst.setString(5, warr.getProductID());
			pst.setInt(6, this.getWarrantyID());
			return pst.executeUpdate()>0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
			conn.closeConnet();
			return false;
		
		
		
	}
	

	public Warrantys getWarrantyBySerialNumber(String SerialNumber) throws Exception{
		Warrantys war = null;
		ConnectDB conn = new ConnectDB();
		String sql = "select * from warrantys where serialnumber=?";
		try {
			PreparedStatement pst = conn.openConnect().prepareStatement(sql);
			pst.setString(1, SerialNumber);
			ResultSet rs=pst.executeQuery();
			int warrantyID = rs.getInt("warrantyid");
			Date exp = rs.getDate("expireddate");
			String orID = rs.getString("orderid");
			String serial = rs.getString("serialnumber");
			String productID = rs.getString("productid");
			war = new Warrantys(warrantyID, exp, orID, serial, productID);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		conn.closeConnet();
		return war;
		
	}
	
	public void getOrderBySerialNumber() {
	
	}

	/**
	 * @return the warrantyID
	 */
	public int getWarrantyID() {
		return warrantyID;
	}

	/**
	 * @param warrantyID the warrantyID to set
	 */
	public void setWarrantyID(int warrantyID) {
		this.warrantyID = warrantyID;
	}

	/**
	 * @return the productID
	 */
	public String getProductID() {
		return productID;
	}

	/**
	 * @param productID the productID to set
	 */
	public void setProductID(String productID) {
		this.productID = productID;
	}

	/**
	 * @return the orderID
	 */
	public String getOrderID() {
		return orderID;
	}

	/**
	 * @param orderID the orderID to set
	 */
	public void setOrderID(String orderID) {
		this.orderID = orderID;
	}

	/**
	 * @return the serialNumber
	 */
	public String getSerialNumber() {
		return serialNumber;
	}

	/**
	 * @param serialNumber the serialNumber to set
	 */
	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	/**
	 * @return the expiredDate
	 */
	public Date getExpiredDate() {
		return expiredDate;
	}

	/**
	 * @param expiredDate the expiredDate to set
	 */
	public void setExpiredDate(Date expiredDate) {
		this.expiredDate = expiredDate;
	}
}
